syntax = "proto3";

import "google/api/annotations.proto";
import "validate/validate.proto";

package api.newssub.v1;

option go_package = "news-subscriber-bff/api/newssub/v1;v1";
option java_multiple_files = true;
option java_package = "api.newssub.v1";

service Article {
	rpc CreateArticle (CreateArticleRequest) returns (CreateArticleReply) {
		option (google.api.http) = {
			post: "/newssub/v1/article/create",
			body: "*"
		};
	}
	rpc UpdateArticle (UpdateArticleRequest) returns (UpdateArticleReply) {
		option (google.api.http) = {
			put: "/newssub/v1/article/{uid}",
			body: "*"
		};
	}
	rpc DeleteArticle (DeleteArticleRequest) returns (DeleteArticleReply) {
		option (google.api.http) = {
			delete: "/newssub/v1/article/{uid}"
		};
	}
	rpc GetArticle (GetArticleRequest) returns (GetArticleReply) {
		option (google.api.http) = {
			get: "/newssub/v1/article/{uid}"
		};
	}
	rpc ListArticle (ListArticleRequest) returns (ListArticleReply) {
		option (google.api.http) = {
			get: "/newssub/v1/article/list"
		};
	}
}

message ArticleItem {
    int64 uid = 1;
    string title = 2;
    string content = 3;
    repeated string tags = 4;
}

message CreateArticleRequest {
	string title = 1 [(validate.rules).string = {min_len: 5, max_len: 50}];
	string content = 2;
	repeated string tags = 3;
}
message CreateArticleReply {
	int64 uid = 1;
}

message UpdateArticleRequest {
	int64 uid = 1;
    string title = 2;
    string content = 3;
    repeated string tags = 4;
}
message UpdateArticleReply {

}

message DeleteArticleRequest {
	int64 uid = 1;
}
message DeleteArticleReply {

}

message GetArticleRequest {
	int64 uid = 1;
}
message GetArticleReply {
	ArticleItem article = 1;
}

message ListArticleRequest {
	int64 start = 1;
	int64 end = 2;
}
message ListArticleReply {
	repeated ArticleItem articles = 1;
}
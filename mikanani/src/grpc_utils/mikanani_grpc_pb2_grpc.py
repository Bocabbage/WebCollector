# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import mikanani_grpc_pb2 as mikanani__grpc__pb2


class MikananiServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAnimeMeta = channel.unary_unary(
                '/mikanani_grpc_utils.MikananiService/ListAnimeMeta',
                request_serializer=mikanani__grpc__pb2.ListAnimeMetaRequest.SerializeToString,
                response_deserializer=mikanani__grpc__pb2.ListAnimeMetaResponse.FromString,
                )
        self.GetAnimeDoc = channel.unary_unary(
                '/mikanani_grpc_utils.MikananiService/GetAnimeDoc',
                request_serializer=mikanani__grpc__pb2.GetAnimeDocRequest.SerializeToString,
                response_deserializer=mikanani__grpc__pb2.GetAnimeDocResponse.FromString,
                )
        self.UpdateAnimeDoc = channel.unary_unary(
                '/mikanani_grpc_utils.MikananiService/UpdateAnimeDoc',
                request_serializer=mikanani__grpc__pb2.UpdateAnimeDocRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UpdateAnimeMeta = channel.unary_unary(
                '/mikanani_grpc_utils.MikananiService/UpdateAnimeMeta',
                request_serializer=mikanani__grpc__pb2.UpdateAnimeMetaRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.InsertAnimeItem = channel.unary_unary(
                '/mikanani_grpc_utils.MikananiService/InsertAnimeItem',
                request_serializer=mikanani__grpc__pb2.InsertAnimeItemRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteAnimeItem = channel.unary_unary(
                '/mikanani_grpc_utils.MikananiService/DeleteAnimeItem',
                request_serializer=mikanani__grpc__pb2.DeleteAnimeItemRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DispatchDownloadTask = channel.unary_unary(
                '/mikanani_grpc_utils.MikananiService/DispatchDownloadTask',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class MikananiServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListAnimeMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAnimeDoc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAnimeDoc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAnimeMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertAnimeItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAnimeItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DispatchDownloadTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MikananiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAnimeMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAnimeMeta,
                    request_deserializer=mikanani__grpc__pb2.ListAnimeMetaRequest.FromString,
                    response_serializer=mikanani__grpc__pb2.ListAnimeMetaResponse.SerializeToString,
            ),
            'GetAnimeDoc': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAnimeDoc,
                    request_deserializer=mikanani__grpc__pb2.GetAnimeDocRequest.FromString,
                    response_serializer=mikanani__grpc__pb2.GetAnimeDocResponse.SerializeToString,
            ),
            'UpdateAnimeDoc': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAnimeDoc,
                    request_deserializer=mikanani__grpc__pb2.UpdateAnimeDocRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateAnimeMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAnimeMeta,
                    request_deserializer=mikanani__grpc__pb2.UpdateAnimeMetaRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'InsertAnimeItem': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertAnimeItem,
                    request_deserializer=mikanani__grpc__pb2.InsertAnimeItemRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteAnimeItem': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAnimeItem,
                    request_deserializer=mikanani__grpc__pb2.DeleteAnimeItemRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DispatchDownloadTask': grpc.unary_unary_rpc_method_handler(
                    servicer.DispatchDownloadTask,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mikanani_grpc_utils.MikananiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MikananiService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListAnimeMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mikanani_grpc_utils.MikananiService/ListAnimeMeta',
            mikanani__grpc__pb2.ListAnimeMetaRequest.SerializeToString,
            mikanani__grpc__pb2.ListAnimeMetaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAnimeDoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mikanani_grpc_utils.MikananiService/GetAnimeDoc',
            mikanani__grpc__pb2.GetAnimeDocRequest.SerializeToString,
            mikanani__grpc__pb2.GetAnimeDocResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAnimeDoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mikanani_grpc_utils.MikananiService/UpdateAnimeDoc',
            mikanani__grpc__pb2.UpdateAnimeDocRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAnimeMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mikanani_grpc_utils.MikananiService/UpdateAnimeMeta',
            mikanani__grpc__pb2.UpdateAnimeMetaRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertAnimeItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mikanani_grpc_utils.MikananiService/InsertAnimeItem',
            mikanani__grpc__pb2.InsertAnimeItemRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAnimeItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mikanani_grpc_utils.MikananiService/DeleteAnimeItem',
            mikanani__grpc__pb2.DeleteAnimeItemRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DispatchDownloadTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mikanani_grpc_utils.MikananiService/DispatchDownloadTask',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
